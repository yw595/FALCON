tissues = {'cortex','Liver','striatum'};
sexes = {'M','F'};
QLengths = {'Q20','Q80','Q92','Q111','Q140','Q175'};

miceGroupsToAnalyses = {};%containers.Map;
for i=1:length(tissues)
    for j=1:length(sexes)
    	for k=1:length(QLengths)
	    if k==length(QLengths)
	        kWrap1 = 1; kWrap2 = k;
	    else
		kWrap1 = k; kWrap2 = k+1;
	    end
	    [absDiffs1TopTen absDiffs2TopTen absDiffsTopTenNames ...
	    relDiffsZero1TopTen relDiffsZero2TopTen relDiffsZeroTopTenNames ...
	    relDiffsNonzero1TopTen relDiffsNonzero2TopTen relDiffsNonzeroTopTenNames ...
	    SSAbsDiffs1TopTen SSAbsDiffs2TopTen SSAbsDiffsTopTenNames ...
	    SSRelDiffsZero1TopTen SSRelDiffsZero2TopTen SSRelDiffsZeroTopTenNames ...
	    SSRelDiffsNonzero1TopTen SSRelDiffsNonzero2TopTen SSRelDiffsNonzeroTopTenNames] ...
	    = analyzeDiffFluxes(newSigurdssonMouse, ['HDFalconData' tissues{i} sexes{j} QLengths{kWrap1} '.txt_falcon_flux.mat'], ['HDFalconData' tissues{i} sexes{j} QLengths{kWrap2} '.txt_falcon_flux.mat'], true);
	    %miceGroupsToAnalyses([tissues{i} sexes{j} QLengths{k} QLengths{k+1}]) = ...
	    %{AbsDiffs1TopTen, AbsDiffs2TopTen, AbsDiffsTopTenNames, ...
	    %RelDiffsZero1TopTen, RelDiffsZero2TopTen, RelDiffsZeroTopTenNames, ...
	    %RelDiffsNonzero1TopTen, RelDiffsNonzero2TopTen, RelDiffsNonzeroTopTenNames};
	    miceGroupsToAnalyses{end+1} = ...
	    {absDiffs1TopTen, absDiffs2TopTen, absDiffsTopTenNames, ...
	    relDiffsZero1TopTen, relDiffsZero2TopTen, relDiffsZeroTopTenNames, ...
	    relDiffsNonzero1TopTen, relDiffsNonzero2TopTen, relDiffsNonzeroTopTenNames, ...
	    SSAbsDiffs1TopTen, SSAbsDiffs2TopTen, SSAbsDiffsTopTenNames, ...
	    SSRelDiffsZero1TopTen, SSRelDiffsZero2TopTen, SSRelDiffsZeroTopTenNames, ...
	    SSRelDiffsNonzero1TopTen, SSRelDiffsNonzero2TopTen, SSRelDiffsNonzeroTopTenNames};	 
  	end
    end
end

save('HDFluxesExportToPython.mat', 'miceGroupsToAnalyses');